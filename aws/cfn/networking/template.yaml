AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AzA:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  AzB:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b
  AzC:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1c
  VpcCidrBlock:
    Description: "CIDR block for VPC"
    Type: String
    Default: 10.0.0.0/16
  SubnetCidrBlocks:
    Description: "Comma-delimited list of CIDR blocks for subnets"
    Type: CommaDelimitedList
    Default: >
      10.0.0.0/24,
      10.0.1.0/24,
      10.0.2.0/24,
      10.0.3.0/24,
      10.0.4.0/24,
      10.0.5.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-VPC
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: !Sub ${AWS::StackName}-IGW
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-RT
  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
        RouteTableId: !Ref RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref IGW
  PubSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref SubnetCidrBlocks]
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Ref AzA
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-SubnetPubA
  PubSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref SubnetCidrBlocks]
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Ref AzB
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-SubnetPubB
  PubSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref SubnetCidrBlocks]
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Ref AzC
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-SubnetPubC
  PrivSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [3, !Ref SubnetCidrBlocks]
      AvailabilityZone: !Ref AzA
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-SubnetPrivA
  PrivSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [4, !Ref SubnetCidrBlocks]
      AvailabilityZone: !Ref AzB
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-SubnetPrivB
  PrivSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [5, !Ref SubnetCidrBlocks]
      AvailabilityZone: !Ref AzC
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-SubnetPrivC
  RouteTableAssociationPubA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PubSubnetA
      RouteTableId: !Ref RouteTable
  RouteTableAssociationPubB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PubSubnetB
      RouteTableId: !Ref RouteTable
  RouteTableAssociationPubC:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PubSubnetC
      RouteTableId: !Ref RouteTable
  RouteTableAssociationPrivA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivSubnetA
      RouteTableId: !Ref RouteTable
  RouteTableAssociationPrivB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivSubnetB
      RouteTableId: !Ref RouteTable
  RouteTableAssociationPrivC:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivSubnetC
      RouteTableId: !Ref RouteTable
Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}VpcId"
  PubSubnetsId:
    Value: !Join 
      - ","
      - - !Ref PubSubnetA
        - !Ref PubSubnetB
        - !Ref PubSubnetC
    Export:
      Name: !Sub "${AWS::StackName}PublicSubnetIds"